<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1262px" preserveAspectRatio="none" style="width:1017px;height:1262px;background:#FFFFFF;" version="1.1" viewBox="0 0 1017 1262" width="1017px" zoomAndPan="magnify"><defs/><g><rect fill="#FF6347" height="45.2188" id="_title" rx="7.5" ry="7.5" style="stroke:#FF0000;stroke-width:2.0;" width="292" x="361.25" y="15"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="195" x="409.75" y="34.5332">Data Science Python Library</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="278" x="370.25" y="52.1426">Architecture for Standardized Guidance</text><ellipse cx="180.5" cy="76.2188" fill="#222222" rx="10" ry="10" style="stroke:#222222;stroke-width:1.0;"/><rect fill="none" height="169.2109" style="stroke:#000000;stroke-width:1.5;" width="931" x="75.5" y="96.2188"/><path d="M246.5,96.2188 L246.5,106.8281 L236.5,116.8281 L75.5,116.8281 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="78.5" y="111.752">Library and File Structure</text><path d="M635.5,180.0508 L635.5,206.4023 L986.5,206.4023 L986.5,190.0508 L976.5,180.0508 L635.5,180.0508 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M976.5,180.0508 L976.5,190.0508 L986.5,190.0508 L976.5,180.0508 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="330" x="641.5" y="198.5459">Objective: Standardization, automation for rinse &amp; repeat.</text><path d="M289.5,133.0234 L289.5,150.375 L269.5,154.375 L289.5,158.375 L289.5,175.7266 A0,0 0 0 0 289.5,175.7266 L583.5,175.7266 A0,0 0 0 0 583.5,175.7266 L583.5,143.0234 L573.5,133.0234 L289.5,133.0234 A0,0 0 0 0 289.5,133.0234 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M573.5,133.0234 L573.5,143.0234 L583.5,143.0234 L573.5,133.0234 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="112" x="295.5" y="151.5186">For more guidance:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="273" x="295.5" y="167.8701">https://github.com/vamseeachanta/py_package</text><rect fill="#F1F1F1" height="35.0938" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="91.5" y="136.8281"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="158" x="101.5" y="159.2852">Clone existing repo of choice</text><path d="M295.5,210.7266 L295.5,228.0781 L275.5,232.0781 L295.5,236.0781 L295.5,253.4297 A0,0 0 0 0 295.5,253.4297 L625.5,253.4297 A0,0 0 0 0 625.5,253.4297 L625.5,220.7266 L615.5,210.7266 L295.5,210.7266 A0,0 0 0 0 295.5,210.7266 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M615.5,210.7266 L615.5,220.7266 L625.5,220.7266 L615.5,210.7266 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="112" x="301.5" y="229.2217">For more guidance:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="309" x="301.5" y="245.5732">https://drivendata.github.io/cookiecutter-data-science/</text><rect fill="#F1F1F1" height="35.0938" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="190" x="85.5" y="214.5313"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="170" x="95.5" y="236.9883">Adapt folder structure as suited</text><rect fill="none" height="240.2969" style="stroke:#000000;stroke-width:1.5;" width="811" x="77.5" y="275.4297"/><path d="M138.5,275.4297 L138.5,286.0391 L128.5,296.0391 L77.5,296.0391 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="80.5" y="290.9629">Start-up</text><path d="M633.5,390.207 L633.5,416.5586 L868.5,416.5586 L868.5,400.207 L858.5,390.207 L633.5,390.207 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M858.5,390.207 L858.5,400.207 L868.5,400.207 L858.5,390.207 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="214" x="639.5" y="408.7021">Objective: Flexibility, automation etc.</text><path d="M254.5,317.4102 L254.5,326.5859 L234.5,330.5859 L254.5,334.5859 L254.5,343.7617 A0,0 0 0 0 254.5,343.7617 L523.5,343.7617 A0,0 0 0 0 523.5,343.7617 L523.5,327.4102 L513.5,317.4102 L254.5,317.4102 A0,0 0 0 0 254.5,317.4102 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M513.5,317.4102 L513.5,327.4102 L523.5,327.4102 L513.5,317.4102 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="248" x="260.5" y="335.9053">Options: json in cmd, yml (or toml) file, csv</text><rect fill="#F1F1F1" height="35.0938" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="108" x="126.5" y="313.0391"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="88" x="136.5" y="335.4961">Providing inputs</text><path d="M259.5,358.1328 L259.5,391.8359 L239.5,395.8359 L259.5,399.8359 L259.5,433.5391 A0,0 0 0 0 259.5,433.5391 L602.5,433.5391 A0,0 0 0 0 602.5,433.5391 L602.5,368.1328 L592.5,358.1328 L259.5,358.1328 A0,0 0 0 0 259.5,358.1328 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M592.5,358.1328 L592.5,368.1328 L602.5,368.1328 L592.5,358.1328 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="318" x="265.5" y="376.6279">Data science runs when parametric expands . Options:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="245" x="281.5" y="392.9795">json string as cmd arguments to run script</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="175" x="281.5" y="409.3311">ascii (.yaml, .json or .toml) file</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="94" x="281.5" y="425.6826">csv for data only</text><rect fill="#F1F1F1" height="35.0938" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="121.5" y="378.2891"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="98" x="131.5" y="400.7461">App Configuration</text><path d="M293.5,457.2813 L293.5,474.6328 L273.5,478.6328 L293.5,482.6328 L293.5,499.9844 A0,0 0 0 0 293.5,499.9844 L623.5,499.9844 A0,0 0 0 0 623.5,499.9844 L623.5,467.2813 L613.5,457.2813 L293.5,457.2813 A0,0 0 0 0 293.5,457.2813 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M613.5,457.2813 L613.5,467.2813 L623.5,467.2813 L613.5,457.2813 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="134" x="299.5" y="475.7764">See below for guidance</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="309" x="299.5" y="492.1279">https://drivendata.github.io/cookiecutter-data-science/</text><rect fill="#F1F1F1" height="50.1875" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="87.5" y="453.5391"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="146" x="97.5" y="475.9961">Environment Configuration</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="166" x="97.5" y="491.0898">(secrets, internal libraries etc.)</text><rect fill="none" height="93.332" style="stroke:#000000;stroke-width:1.5;" width="784" x="135" y="525.7266"/><path d="M348,525.7266 L348,536.3359 L338,546.3359 L135,546.3359 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="138" y="541.2598">Test Driven Development (TDD)</text><path d="M540,570.707 L540,597.0586 L899,597.0586 L899,580.707 L889,570.707 L540,570.707 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M889,570.707 L889,580.707 L899,580.707 L889,570.707 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="338" x="546" y="589.2021">Objective: TDD advocacy, automation, easy reuse of code.</text><path d="M236,562.5313 L236,579.8828 L216,583.8828 L236,587.8828 L236,605.2344 A0,0 0 0 0 236,605.2344 L530,605.2344 A0,0 0 0 0 530,605.2344 L530,572.5313 L520,562.5313 L236,562.5313 A0,0 0 0 0 236,562.5313 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M520,562.5313 L520,572.5313 L530,572.5313 L520,562.5313 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="160" x="242" y="581.0264">For more specific guidance:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="273" x="242" y="597.3779">https://github.com/vamseeachanta/py_package</text><rect fill="#F1F1F1" height="35.0938" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="71" x="145" y="566.3359"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="51" x="155" y="588.793">Write test</text><rect fill="none" height="258.6719" style="stroke:#000000;stroke-width:1.5;" width="943" x="11" y="629.0586"/><path d="M266,629.0586 L266,639.668 L256,649.668 L11,649.668 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="14" y="644.5918">Development, Testing and Deployment</text><path d="M664,745.1211 L664,771.4727 L934,771.4727 L934,755.1211 L924,745.1211 L664,745.1211 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M924,745.1211 L924,755.1211 L934,755.1211 L924,745.1211 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="249" x="670" y="763.6162">Objective: Automation, easy reuse of code.</text><path d="M360,665.8633 L360,683.2148 L340,687.2148 L360,691.2148 L360,708.5664 A0,0 0 0 0 360,708.5664 L654,708.5664 A0,0 0 0 0 654,708.5664 L654,675.8633 L644,665.8633 L360,665.8633 A0,0 0 0 0 360,665.8633 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M644,665.8633 L644,675.8633 L654,675.8633 L644,665.8633 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="160" x="366" y="684.3584">For more specific guidance:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="273" x="366" y="700.71">https://github.com/vamseeachanta/py_package</text><rect fill="#F1F1F1" height="35.0938" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="319" x="21" y="669.668"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="299" x="31" y="692.125">Automate all repeat (performed &gt; n=2? times) activities</text><path d="M271.5,718.5664 L271.5,793.1484 L251.5,797.1484 L271.5,801.1484 L271.5,875.7305 A0,0 0 0 0 271.5,875.7305 L589.5,875.7305 A0,0 0 0 0 589.5,875.7305 L589.5,728.5664 L579.5,718.5664 L271.5,718.5664 A0,0 0 0 0 271.5,718.5664 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M579.5,718.5664 L579.5,728.5664 L589.5,728.5664 L579.5,718.5664 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="176" x="277.5" y="737.0615">Refactor as much as possible:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="277" x="293.5" y="753.4131">a/ Library Level: Identify common code to group.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="117" x="293.5" y="769.7646">Classify into folders:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="61" x="309.5" y="786.1162">i. common</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="86" x="309.5" y="802.4678">ii. app_specific</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="162" x="293.5" y="818.8193">b/ Across Multiple Libraries:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="223" x="293.5" y="835.1709">- A utility library to use across libraries</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="132" x="293.5" y="851.5225">- Avoid overengineering</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="261" x="293.5" y="867.874">- Keep it basic so back-compatibility is easy.</text><rect fill="#F1F1F1" height="35.0938" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="142" x="109.5" y="779.6016"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="122" x="119.5" y="802.0586">Refactor to clean code</text><rect fill="none" height="285.1797" style="stroke:#000000;stroke-width:1.5;" width="435" x="116" y="897.7305"/><path d="M220,897.7305 L220,908.3398 L210,918.3398 L116,918.3398 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="119" y="913.2637">Output Results</text><path d="M255,928.3398 L255,994.7461 L235,998.7461 L255,1002.7461 L255,1069.1523 A0,0 0 0 0 255,1069.1523 L541,1069.1523 A0,0 0 0 0 541,1069.1523 L541,938.3398 L531,928.3398 L255,928.3398 A0,0 0 0 0 255,928.3398 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M531,928.3398 L531,938.3398 L541,938.3398 L531,928.3398 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="173" x="261" y="946.835">saved to folder in priority order</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="249" x="277" y="963.1865">a. output to results folder inside data_folder</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="241" x="277" y="979.5381">b. if no data provided, output results folder</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="191" x="289" y="995.8896">in current working directory (cwd)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="261" y="1012.2412">high-level outputs:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="114" x="277" y="1028.5928">{data_folder}/results</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="96" x="261" y="1044.9443">detailed outputs:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="163" x="277" y="1061.2959">{data_folder}/results/detailed</text><rect fill="#F1F1F1" height="35.0938" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="109" x="126" y="981.1992"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="86" x="139" y="1003.6563">Result Location</text><path d="M244.5,1079.1523 L244.5,1121.0313 L224.5,1125.0313 L244.5,1129.0313 L244.5,1170.9102 A0,0 0 0 0 244.5,1170.9102 L483.5,1170.9102 A0,0 0 0 0 483.5,1170.9102 L483.5,1089.1523 L473.5,1079.1523 L244.5,1079.1523 A0,0 0 0 0 244.5,1079.1523 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M473.5,1079.1523 L473.5,1089.1523 L483.5,1089.1523 L473.5,1079.1523 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="157" x="250.5" y="1097.6475">Output data in ascci format</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="202" x="266.5" y="1113.999">a. key-value pairs in .yaml(or .json)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="121" x="266.5" y="1130.3506">b. matrix data in .csv</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="124" x="250.5" y="1146.7021">Output visualizations:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="146" x="266.5" y="1163.0537">2d and 3d charts in plotly</text><rect fill="#F1F1F1" height="35.0938" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="88" x="136.5" y="1107.4844"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="65" x="149.5" y="1129.9414">Result Type</text><ellipse cx="180.5" cy="1213.9102" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="180.5" cy="1213.9102" fill="#222222" rx="6" ry="6" style="stroke:#111111;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="180.5" x2="180.5" y1="171.9219" y2="214.5313"/><polygon fill="#181818" points="176.5,204.5313,180.5,214.5313,184.5,204.5313,180.5,208.5313" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="180.5" x2="180.5" y1="86.2188" y2="136.8281"/><polygon fill="#181818" points="176.5,126.8281,180.5,136.8281,184.5,126.8281,180.5,130.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="180.5" x2="180.5" y1="348.1328" y2="378.2891"/><polygon fill="#181818" points="176.5,368.2891,180.5,378.2891,184.5,368.2891,180.5,372.2891" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="180.5" x2="180.5" y1="413.3828" y2="453.5391"/><polygon fill="#181818" points="176.5,443.5391,180.5,453.5391,184.5,443.5391,180.5,447.5391" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="180.5" x2="180.5" y1="249.625" y2="313.0391"/><polygon fill="#181818" points="176.5,303.0391,180.5,313.0391,184.5,303.0391,180.5,307.0391" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="180.5" x2="180.5" y1="503.7266" y2="566.3359"/><polygon fill="#181818" points="176.5,556.3359,180.5,566.3359,184.5,556.3359,180.5,560.3359" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="180.5" x2="180.5" y1="704.7617" y2="779.6016"/><polygon fill="#181818" points="176.5,769.6016,180.5,779.6016,184.5,769.6016,180.5,773.6016" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="180.5" x2="180.5" y1="601.4297" y2="669.668"/><polygon fill="#181818" points="176.5,659.668,180.5,669.668,184.5,659.668,180.5,663.668" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="180.5" x2="180.5" y1="1016.293" y2="1107.4844"/><polygon fill="#181818" points="176.5,1097.4844,180.5,1107.4844,184.5,1097.4844,180.5,1101.4844" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="180.5" x2="180.5" y1="814.6953" y2="981.1992"/><polygon fill="#181818" points="176.5,971.1992,180.5,981.1992,184.5,971.1992,180.5,975.1992" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="180.5" x2="180.5" y1="1142.5781" y2="1202.9102"/><polygon fill="#181818" points="176.5,1192.9102,180.5,1202.9102,184.5,1192.9102,180.5,1196.9102" style="stroke:#181818;stroke-width:1.0;"/><rect fill="none" height="25.1563" style="stroke:none;stroke-width:1.0;" width="154" x="430.25" y="1223.9102"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="96" x="459.25" y="1234.291">2022.10.29 at 22:03</text><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="154" x="430.25" y="1246.8691">data_science_architecture.puml</text><!--MD5=[1aa20c63e7fa5c2d37782933ca401738]
@startuml data_science_architecture
skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor red
skinparam titleBackgroundColor Tomato

title Data Science Python Library\n Architecture for Standardized Guidance

start

    partition "Library and File Structure" {

        note right
            Objective: Standardization, automation for rinse & repeat.
        end note

        :Clone existing repo of choice;
            note right
                For more guidance:
                https://github.com/vamseeachanta/py_package
            end note
        :Adapt folder structure as suited;
            note right
                For more guidance:
                https://drivendata.github.io/cookiecutter-data-science/
            end note
    }

    partition "Start-up" {

        note right
            Objective: Flexibility, automation etc.
        end note

        :Providing inputs;
            note right
                Options: json in cmd, yml (or toml) file, csv
            end note

        :App Configuration;
            note right
                Data science runs when parametric expands . Options: 
                    json string as cmd arguments to run script
                    ascii (.yaml, .json or .toml) file 
                    csv for data only
            end note

        :Environment Configuration 
        (secrets, internal libraries etc.);
            note right
                See below for guidance
                https://drivendata.github.io/cookiecutter-data-science/
            end note

    }

    partition "Test Driven Development (TDD)" {
        note right
            Objective: TDD advocacy, automation, easy reuse of code.
        end note

    :Write test;
        note right
            For more specific guidance:
            https://github.com/vamseeachanta/py_package
        end note
    }

    partition "Development, Testing and Deployment" {
        note right
            Objective: Automation, easy reuse of code.
        end note

    :Automate all repeat (performed > n=2? times) activities;
        note right
            For more specific guidance:
            https://github.com/vamseeachanta/py_package
        end note
    

    :Refactor to clean code;
        note right
            Refactor as much as possible:
                a/ Library Level: Identify common code to group. 
                Classify into folders:
                    i. common
                    ii. app_specific
                b/ Across Multiple Libraries: 
                - A utility library to use across libraries
                - Avoid overengineering
                - Keep it basic so back-compatibility is easy.
        end note
    }

    partition "Output Results" {
    : Result Location;
        note right
            saved to folder in priority order
                a. output to results folder inside data_folder
                b. if no data provided, output results folder 
                   in current working directory (cwd)
            high-level outputs:
                {data_folder}/results
            detailed outputs:
                {data_folder}/results/detailed
        end note
    : Result Type;
        note right
            Output data in ascci format
                a. key-value pairs in .yaml(or .json)
                b. matrix data in .csv 
            Output visualizations:
                2d and 3d charts in plotly
        end note
    }

stop

footer
%date("yyyy.MM.dd' at 'HH:mm")
%filename()
end footer

@enduml

@startuml data_science_architecture
skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor red
skinparam titleBackgroundColor Tomato

title Data Science Python Library\n Architecture for Standardized Guidance

start

    partition "Library and File Structure" {

        note right
            Objective: Standardization, automation for rinse & repeat.
        end note

        :Clone existing repo of choice;
            note right
                For more guidance:
                https://github.com/vamseeachanta/py_package
            end note
        :Adapt folder structure as suited;
            note right
                For more guidance:
                https://drivendata.github.io/cookiecutter-data-science/
            end note
    }

    partition "Start-up" {

        note right
            Objective: Flexibility, automation etc.
        end note

        :Providing inputs;
            note right
                Options: json in cmd, yml (or toml) file, csv
            end note

        :App Configuration;
            note right
                Data science runs when parametric expands . Options: 
                    json string as cmd arguments to run script
                    ascii (.yaml, .json or .toml) file 
                    csv for data only
            end note

        :Environment Configuration 
        (secrets, internal libraries etc.);
            note right
                See below for guidance
                https://drivendata.github.io/cookiecutter-data-science/
            end note

    }

    partition "Test Driven Development (TDD)" {
        note right
            Objective: TDD advocacy, automation, easy reuse of code.
        end note

    :Write test;
        note right
            For more specific guidance:
            https://github.com/vamseeachanta/py_package
        end note
    }

    partition "Development, Testing and Deployment" {
        note right
            Objective: Automation, easy reuse of code.
        end note

    :Automate all repeat (performed > n=2? times) activities;
        note right
            For more specific guidance:
            https://github.com/vamseeachanta/py_package
        end note
    

    :Refactor to clean code;
        note right
            Refactor as much as possible:
                a/ Library Level: Identify common code to group. 
                Classify into folders:
                    i. common
                    ii. app_specific
                b/ Across Multiple Libraries: 
                - A utility library to use across libraries
                - Avoid overengineering
                - Keep it basic so back-compatibility is easy.
        end note
    }

    partition "Output Results" {
    : Result Location;
        note right
            saved to folder in priority order
                a. output to results folder inside data_folder
                b. if no data provided, output results folder 
                   in current working directory (cwd)
            high-level outputs:
                {data_folder}/results
            detailed outputs:
                {data_folder}/results/detailed
        end note
    : Result Type;
        note right
            Output data in ascci format
                a. key-value pairs in .yaml(or .json)
                b. matrix data in .csv 
            Output visualizations:
                2d and 3d charts in plotly
        end note
    }

stop

footer
2022.10.29 at 22:03
data_science_architecture.puml
end footer

@enduml

PlantUML version 1.2022.8(Sun Sep 25 04:00:33 CDT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>